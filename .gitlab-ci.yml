stages:
  - build
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  IMAGE_NAME_BACKEND1: $CI_REGISTRY/$CI_PROJECT_NAME/backend1
  IMAGE_NAME_BACKEND2: $CI_REGISTRY/$CI_PROJECT_NAME/backend2
  IMAGE_NAME_FRONTEND: $CI_REGISTRY/$CI_PROJECT_NAME/frontend

services:
  - docker:dind

before_script:
  - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin "$DOCKER_HUB_REGISTRY"

build_backend1:
  stage: build
  image: docker:latest
  script:
    - docker build -t $IMAGE_NAME_BACKEND1:$CI_COMMIT_TAG -f backend1/Dockerfile.backend1 backend1/
    - docker push $IMAGE_NAME_BACKEND1:$CI_COMMIT_TAG

build_backend2:
  stage: build
  image: docker:latest
  script:
    - docker build -t $IMAGE_NAME_BACKEND2:$CI_COMMIT_TAG -f backend2/Dockerfile.backend2 backend2/
    - docker push $IMAGE_NAME_BACKEND2:$CI_COMMIT_TAG

build_frontend:
  stage: build
  image: docker:latest
  script:
    - docker build -t $IMAGE_NAME_FRONTEND:$CI_COMMIT_TAG -f frontend/Dockerfile.frontend frontend/
    - docker push $IMAGE_NAME_FRONTEND:$CI_COMMIT_TAG

deploy_backend1:
  stage: deploy
  image: docker:latest
  script:
    - docker run -d --name backend1 --network network1 -e DATABASE_NAME=mydatabase -e DATABASE_USER=myuser -e DATABASE_PASSWORD=mypassword -e DATABASE_HOST=db1 -e DATABASE_PORT=5432 $IMAGE_NAME_BACKEND1:$CI_COMMIT_TAG
    - docker exec backend1 python manage.py makemigrations
    - docker exec backend1 python manage.py migrate
    - docker exec backend1 python manage.py loaddata account/fixtures/account_billingaddress.json
    - docker exec backend1 python manage.py loaddata account/fixtures/account_ordermodel.json
    - docker exec backend1 python manage.py loaddata account/fixtures/account_stripemodel.json

deploy_backend2:
  stage: deploy
  image: docker:latest
  script:
    - docker run -d --name backend2 --network network2 -e DATABASE_NAME=mydatabase -e DATABASE_USER=myuser -e DATABASE_PASSWORD=mypassword -e DATABASE_HOST=db2 -e DATABASE_PORT=5432 $IMAGE_NAME_BACKEND2:$CI_COMMIT_TAG
    - docker exec backend2 python manage.py makemigrations
    - docker exec backend2 python manage.py migrate
    - docker exec backend2 python manage.py loaddata product/fixtures/initial_data.json

deploy_frontend:
  stage: deploy
  image: docker:latest
  script:
    - docker run -d --name frontend --network network3 -p 3000:3000 $IMAGE_NAME_FRONTEND:$CI_COMMIT_TAG

